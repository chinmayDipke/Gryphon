package DSA;

import java.util.Stack;

public class UseStack {

	public static void main(String[] args) {
		
		Stack<Integer> s = new Stack();
		Stack<Integer> s1 = new Stack();
		
		/*		
		s.push(3);
		s.push(23);
		s.push(34);
		s.push(91);
		s.push(92);
		s.push(98);
		
		System.out.println("Stack s: "+s);
		System.out.println("Stack s1: "+s1);
		System.out.println("Cap s1: "+s.size());
		
		
		for(int i = s.size()-1; i >= 0 ;i--) 
		{
			s1.push((s.get(i)));
		}
		System.out.println("=====================");
		System.out.println("Stack s: "+s);
		System.out.println("Stack s1: "+s1);
		
		System.out.println("===================================");
		*/
		Stack<Integer> stack = new Stack();
		Stack<Integer> s3 = new Stack();
		stack.push(23);
		stack.push(92);
		stack.push(98);
		stack.push(31);
		stack.push(3);
		stack.push(34);
		
		System.out.println("Before Sort : "+stack);
		System.out.println("Stack s3: "+s3);
		sortStack(stack);
		while(!stack.isEmpty()) 
		{
			int putval = 0;
			if(s3.isEmpty())
			{
				int temp=stack.pop();
				s3.push(temp);
			}
			else if() {
				
			}
		}
		
		System.out.println("=====================");
		System.out.println("After Sort : "+stack);
		System.out.println("Stack s2: "+s3);

		
	}

}
